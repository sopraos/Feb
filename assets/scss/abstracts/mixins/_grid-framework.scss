// Mixins - Grille Framework
// ==|====================

// Système de grille
// ==|====================

// Framework de génération de grille
@mixin grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
	// Common properties for all breakpoints
	%grid-column {
		position: relative;
		width: 100%;
		min-height: 1px; // Prevent columns from collapsing when empty
		padding-right: ($gutter / 2);
		padding-left: ($gutter / 2);
	}

	@each $breakpoint in map-keys($breakpoints) {
		$infix: breakpoint-infix($breakpoint, $breakpoints);

		// Autoriser les colonnes à s'étendre sur toute la largeur en dessous de leurs points d'arrêt
		@for $i from 1 through $columns {
			.col#{$infix}-#{$i} {
				@extend %grid-column;
			}
		}

		.col#{$infix},
		.col#{$infix}-auto {
			@extend %grid-column;
		}

		@include media-breakpoint-up($breakpoint, $breakpoints) {
			.col#{$infix} {
				flex-basis: 0;
				flex-grow: 1;
				max-width: 100%;
			}

			.col#{$infix}-auto {
				flex: 0 0 auto;
				width: auto;
				max-width: 100%;
			}

			@for $i from 1 through $columns {
				.col#{$infix}-#{$i} {
					@include col($i, $columns);
				}
			}

			.order#{$infix}-first { order: -1; }

			.order#{$infix}-last { order: $columns + 1; }

			@for $i from 0 through $columns {
				.order#{$infix}-#{$i} { order: $i; }
			}
		}
	}
}

/// Mixins
@mixin container() {
	width: 100%;
	padding-right: ($grid-gutter-width / 2);
	padding-left: ($grid-gutter-width / 2);
	margin-right: auto;
	margin-left: auto;
}

// Pour chaque point d'arrêt, définissez la largeur maximale du conteneur dans une requête multimédia
@mixin container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
	@each $breakpoint, $container-max-width in $max-widths {
		@include media-breakpoint-up($breakpoint, $breakpoints) {
			max-width: $container-max-width;
		}
	}
}

// Row
@mixin row() {
	display: flex;
	flex-wrap: wrap;
	margin-right: -$grid-gutter-width / 2;
	margin-left: -$grid-gutter-width / 2;
}

@mixin col($size, $columns: $grid-columns) {
	flex: 0 0 percentage($size / $columns);
	max-width: percentage($size / $columns);
}
